import { DocumentoDireccion } from './DocumentoDireccion.model';
import { Entidad } from './Entidad.model';
import { DocumentoArchivo } from './DocumentoArchivo.model';
import { Movimiento } from './Movimiento.model';
import { MarketplaceArea } from './MarketplaceArea.model';
import { EmpresaAlmacen } from './EmpresaAlmacen.model';
import { DocumentoTipo } from './DocumentoTipo.model';
import { DocumentoPeriodo } from './DocumentoPeriodo.model';
import { DocumentoUsoCFDI } from './DocumentoUsoCFDI.model';
import { Usuario } from './Usuario.model';
import { Moneda } from './Moneda.model';
import { Paqueteria } from './Paqueteria.model';
import { DocumentoFase } from './DocumentoFase.model';
import { ModeloProveedor } from './ModeloProveedor.model';

export class Documento {
    public id: number;
    public almacen_principal: EmpresaAlmacen;
    public almacen_secundario: EmpresaAlmacen;
    public tipo: DocumentoTipo;
    public periodo: DocumentoPeriodo;
    public uso_cfdi: DocumentoUsoCFDI;
    public marketplace: MarketplaceArea;
    public usuario: Usuario;
    public moneda: Moneda;
    public paqueteria: Paqueteria;
    public fase: DocumentoFase;
    public modelo_proveedor: ModeloProveedor;
    public documento_extra: string;
    public factura_serie: string;
    public factura_folio: string;
    public nota: string;
    public no_venta: string;
    public no_venta_btob: string;
    public tipo_cambio: number;
    public referencia: Text;
    public observacion: Text;
    public info_extra: object;
    public addenda_orden_compra: string;
    public addenda_solicitud_pago: string;
    public addenda_tipo_documento: string;
    public addenda_factura_asociada: string;
    public picking: boolean;
    public picking_by: number;
    public packing_by: number;
    public sandbox: boolean;
    public canceled_by: number;
    public canceled_authorized_by: number;
    public autorizado: boolean;
    public autorizado_by: number;
    public anticipada: boolean;
    public refacturado: boolean;
    public problema: boolean;
    public pagado: boolean;
    public credito: boolean;
    public fulfillment: boolean;
    public series_factura: boolean;
    public importado: boolean;
    public modificacion: boolean;
    public factura_enviada: boolean;
    public solicitar_refacturacion: boolean;
    public guia_impresa: boolean;
    public status_proveedor_btob: string;
    public comentario: Text;
    public uuid: string;
    public pedimento: string;
    public mkt_total: number;
    public mkt_user_total: number;
    public mkt_fee: number;
    public mkt_coupon: number;
    public mkt_shipping_id: string;
    public mkt_shipping_total: number;
    public mkt_shipping_total_cost: number;
    public mkt_shipping_delivered_date: string;
    public mkt_publicacion: string;
    public mkt_created_at: string;
    public payment_date: string;
    public picking_date: string;
    public packing_date: string;
    public shipping_date: string;
    public invoice_date: string;
    public started_at: string;
    public created_at: string;
    public updated_at: string;
    public expired_at: string;
    public imported_at: string;
    public refacturado_at: string;
    public finished_at: string;
    public arrived_at: string;
    public validated_at: string;
    public direccion: DocumentoDireccion;
    public entidad: Entidad;
    public archivos: DocumentoArchivo[];
    public productos: Movimiento[];

    constructor() {
        this.id = 0;
        this.almacen_principal = new EmpresaAlmacen();
        this.almacen_secundario = new EmpresaAlmacen();
        this.tipo = new DocumentoTipo();
        this.periodo = new DocumentoPeriodo();
        this.uso_cfdi = new DocumentoUsoCFDI();
        this.marketplace = new MarketplaceArea();
        this.usuario = new Usuario();
        this.moneda = new Moneda();
        this.paqueteria = new Paqueteria();
        this.fase = new DocumentoFase();
        this.modelo_proveedor = new ModeloProveedor();
        this.documento_extra = '';
        this.factura_serie = '';
        this.factura_folio = '';
        this.nota = '';
        this.no_venta = '';
        this.no_venta_btob = '';
        this.tipo_cambio = 0;
        this.referencia = new Text();
        this.observacion = new Text();
        this.info_extra = new Text();
        this.addenda_orden_compra = '';
        this.addenda_solicitud_pago = '';
        this.addenda_tipo_documento = '';
        this.addenda_factura_asociada = '';
        this.picking = false;
        this.picking_by = 0;
        this.packing_by = 0;
        this.sandbox = false;
        this.canceled_by = 0;
        this.canceled_authorized_by = 0;
        this.autorizado = false;
        this.autorizado_by = 0;
        this.anticipada = false;
        this.refacturado = false;
        this.problema = false;
        this.pagado = false;
        this.credito = false;
        this.fulfillment = false;
        this.series_factura = false;
        this.importado = false;
        this.modificacion = false;
        this.factura_enviada = false;
        this.solicitar_refacturacion = false;
        this.guia_impresa = false;
        this.status_proveedor_btob = '';
        this.comentario = new Text();
        this.uuid = '';
        this.pedimento = '';
        this.mkt_total = 0;
        this.mkt_user_total = 0;
        this.mkt_fee = 0;
        this.mkt_coupon = 0;
        this.mkt_shipping_id = '';
        this.mkt_shipping_total = 0;
        this.mkt_shipping_total_cost = 0;
        this.mkt_shipping_delivered_date = '';
        this.mkt_publicacion = '';
        this.mkt_created_at = '';
        this.payment_date = '';
        this.picking_date = '';
        this.packing_date = '';
        this.shipping_date = '';
        this.invoice_date = '';
        this.started_at = '';
        this.created_at = '';
        this.updated_at = '';
        this.expired_at = '';
        this.imported_at = '';
        this.refacturado_at = '';
        this.finished_at = '';
        this.arrived_at = '';
        this.validated_at = '';
        this.direccion = new DocumentoDireccion();
        this.entidad = new Entidad();
        this.archivos = [];
        this.productos = [];
    }
}
